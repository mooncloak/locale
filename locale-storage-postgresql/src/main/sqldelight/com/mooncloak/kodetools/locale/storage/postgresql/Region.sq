import kotlinx.datetime.Instant;

CREATE TABLE region (
    database_id SERIAL PRIMARY KEY,
    id TEXT NOT NULL UNIQUE,
    created TIMESTAMPTZ AS Instant NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated TIMESTAMPTZ AS Instant NOT NULL DEFAULT CURRENT_TIMESTAMP,
    code TEXT NOT NULL UNIQUE,
    country_code TEXT NOT NULL,
    name TEXT,
    flag TEXT,
    emoji_flag TEXT,
    type TEXT
);

CREATE INDEX Region_id_index ON region(id);
CREATE INDEX Region_code_index ON region(code);
CREATE INDEX Region_country_code_index ON region(code);
CREATE INDEX Region_name_index ON region(name);

insert:
INSERT INTO region (id, created, updated, code, country_code, name, flag, emoji_flag, type)
VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);

updateAllById:
UPDATE region
SET name = :name,
    type = :type,
    flag = :flag,
    emoji_flag = :emojiFlag
WHERE id = :id;

updateAllByCode:
UPDATE region
SET name = :name,
    type = :type,
    flag = :flag,
    emoji_flag = :emojiFlag
WHERE UPPER(code) = UPPER(:code);

countAll:
SELECT COUNT(*)
FROM region;

countAllInCountry:
SELECT COUNT(*)
FROM region
WHERE UPPER(country_code) = UPPER(:countryCode);

selectById:
SELECT *
FROM region
WHERE id = :id;

selectByCode:
SELECT *
FROM region
WHERE UPPER(code) = UPPER(:code);

selectAll:
SELECT *
FROM region;

selectAllForCountry:
SELECT *
FROM region
WHERE UPPER(country_code) = UPPER(:countryCode);

selectPage:
SELECT *
FROM region
ORDER BY code
LIMIT :limit
OFFSET :offset;

selectPageInCountry:
SELECT *
FROM region
WHERE UPPER(country_code) = UPPER(:countryCode)
ORDER BY code
LIMIT :limit
OFFSET :offset;

selectIn:
SELECT *
FROM region
WHERE code IN :codes;

deleteById:
DELETE FROM region
WHERE id = :id;

deleteByCode:
DELETE FROM region
WHERE UPPER(code) = UPPER(:code);

deleteIn:
DELETE FROM region
WHERE code IN :codes;

deleteAll:
DELETE FROM region;
